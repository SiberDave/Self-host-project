events {}
http {
    include mime.types;
    default_type  application/octet-stream;    

    map $arg_v $asset_immutable {
        "" "";
    default "immutable";
    }

    server {
        listen 8080;
        server_name local.nginx;    
        location /stub_status {
            stub_status on;
        }
    }

    server {
       listen 80;
       server_name local.vaultwarden;
       return 301 https://local.vaultwarden$request_uri;
    }
    server {
        listen 443 ssl;
        server_name local.vaultwarden;
        ssl_certificate /etc/nginx/certs/local.vaultwarden-crt.pem;
        ssl_certificate_key /etc/nginx/certs/local.vaultwarden-key.pem;
        location / {
            proxy_pass http://vaultwarden:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
    server {
       listen 80;
       server_name local.code-server;
       return 301 https://local.code-server$request_uri;
    }
    server {
        listen 443 ssl;
        server_name local.code-server;
        ssl_certificate /etc/nginx/certs/local.code-server-crt.pem;
        ssl_certificate_key /etc/nginx/certs/local.code-server-key.pem;
        location / {
            proxy_pass http://code-server:8443;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
        }
    }
    # server{
    #     listen 443 ssl;
    #     server_name local.webtop;
    #     ssl_certificate /etc/nginx/certs/local.webtop-crt.pem;
    #     ssl_certificate_key /etc/nginx/certs/local.webtop-key.pem;
    #     # See https://github.com/linuxserver/docker-baseimage-kasmvnc?tab=readme-ov-file#lossless
    #     add_header 'Cross-Origin-Embedder-Policy' 'require-corp';
    #     add_header 'Cross-Origin-Opener-Policy' 'same-origin';
    #     add_header 'Cross-Origin-Resource-Policy' 'same-site';
    #     location / {
    #         proxy_pass http://webtop:3000;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection upgrade;
    #         proxy_set_header Accept-Encoding gzip;
    #     }
    # }
    server {
       listen 80;
       server_name local.portainer;
       return 301 https://local.portainer$request_uri;
    }
    server {
        listen 443 ssl;
        server_name local.portainer;
        ssl_certificate /etc/nginx/certs/local.code-server-crt.pem;
        ssl_certificate_key /etc/nginx/certs/local.code-server-key.pem;
        location / {
            proxy_pass https://portainer:9443;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            # This is for connecting to container because its need websocket
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
        }
    }
    server {
       listen 80;
       server_name local.nextcloud;
       return 301 https://local.nextcloud$request_uri;
    }
    server {
        listen 443 ssl;
        root /var/www/html;
        index index.php index.html /index.php$request_uri;
        server_name local.nextcloud;
        ssl_certificate /etc/nginx/certs/local.nextcloud-crt.pem;
        ssl_certificate_key /etc/nginx/certs/local.nextcloud-key.pem;

        # Setup max upload size and increase upload timeout nextcloud
        client_max_body_size 1G;
        client_body_timeout 3600s;

        add_header Referrer-Policy                      "no-referrer"       always;
        add_header X-Content-Type-Options               "nosniff"           always;
        add_header X-Frame-Options                      "SAMEORIGIN"        always;
        add_header X-Permitted-Cross-Domain-Policies    "none"              always;
        add_header X-Robots-Tag                         "noindex, nofollow" always;

        gzip on;
        gzip_vary on;
        gzip_comp_level 4;
        gzip_min_length 256;
        gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
        gzip_types application/atom+xml text/javascript application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

        location = / {
            if ( $http_user_agent ~ ^DavClnt ) {
                return 302 /remote.php/webdav/$is_args$args;
            }
        }

        location ~ \.php(?:$|/) {
            rewrite ^/(?!index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|ocs-provider\/.+|.+\/richdocumentscode\/proxy) /index.php$request_uri;
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            set $path_info $fastcgi_path_info;

            try_files $fastcgi_script_name =404;

            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $path_info;
            fastcgi_param HTTPS on;

            fastcgi_param modHeadersAvailable true;         # Avoid sending the security headers twice
            fastcgi_param front_controller_active true; 
            fastcgi_pass nextcloud:9000;
        }

        location ~* \.(?:js|mjs)$ {
            types { 
                text/javascript js mjs;
            } 
            try_files $uri /index.php$request_uri;
            add_header Cache-Control "public, max-age=15778463, $asset_immutable";
            access_log off;
        }

        location ~ \.(?:css|svg|gif|png|jpg|ico|wasm|tflite|map|ogg|flac)$ {
            try_files $uri /index.php$request_uri;
            add_header Cache-Control "public, max-age=15778463, $asset_immutable";
            access_log off;     # Optional: Don't log access to assets

            location ~ \.wasm$ {
                default_type application/wasm;
            }
        }

        location / {
            try_files $uri $uri/ /index.php$request_uri;
        }
    }
    server {
       listen 80;
       server_name local.prometheus;
       return 301 https://local.prometheus$request_uri;
    }
    server {
        listen 443 ssl;
        server_name local.prometheus;
        ssl_certificate /etc/nginx/certs/local.prometheus-crt.pem;
        ssl_certificate_key /etc/nginx/certs/local.prometheus-key.pem;
        location / {
            proxy_pass http://prometheus:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
    server {
       listen 80;
       server_name local.gitea;
       return 301 https://local.gitea$request_uri;
    }
    server {
        listen 443 ssl;
        server_name local.gitea;
        ssl_certificate /etc/nginx/certs/local.gitea-crt.pem;
        ssl_certificate_key /etc/nginx/certs/local.gitea-key.pem;
        location / {
            proxy_pass http://gitea:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
    server {
       listen 80;
       server_name local.dnsmasq;
       return 301 https://local.dnsmasq$request_uri;
    }
    server {
        listen 443 ssl;
        server_name local.dnsmasq;
        ssl_certificate /etc/nginx/certs/local.dnsmasq-crt.pem;
        ssl_certificate_key /etc/nginx/certs/local.dnsmasq-key.pem;
        location / {
            proxy_pass http://dnsmasq:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
    # server {
    #     listen 443 ssl;
    #     server_name local.gitlab;
    #     ssl_certificate /etc/nginx/certs/local.gitlab-crt.pem;
    #     ssl_certificate_key /etc/nginx/certs/local.gitlab-key.pem;
    #     location / {
    #         proxy_pass http://gitlab;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #     }
    # }
    # server {
    #    listen 80;
    #    server_name local.gitlab;
    #    return 301 https://local.gitlab$request_uri;
    # }
}
